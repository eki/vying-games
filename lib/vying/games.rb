# frozen_string_literal: true

# Copyright 2007, Eric Idema except where otherwise noted.
# You may redistribute / modify this file under the same terms as Ruby.

# Container for constants related to the vying library

module Vying
  module Games

    def self.root
      Pathname.new(File.expand_path('../..', __dir__))
    end

    # Returns the version of this vying codebase.

    def self.version
      v = const_defined?(:VERSION) ? VERSION : 'git master'
      v.to_s
    end

    # Returns a list of methods defined in extensions.

    def self.defined_in_extension
      @defined_in_extension ||= []
    end

    # Returns a list of the types of extensions that have been loaded.
    # Currently, only the value :c is returned.

    def self.extension_types
      (@exts || {}).keys
    end

    # Returns a list of the extensions that were loaded for a given type.
    # Get the extension type from Vying::Games.ext_types.

    def self.extensions(type)
      (@exts || {})[type]
    end

    # Load the given extension.

    def self.load_extension(type, path)
      @exts ||= {}

      # Track what methods are added by the extension.

      Module.class_eval do
        def singleton_method_added(name)
          Vying::Games.defined_in_extension << "#{self}.#{name}"
        end

        def method_added(name)
          unless name == :method_added
            Vying::Games.defined_in_extension << "#{self}##{name}"
          end
        end
      end

      begin
        require path
        (@exts[type] ||= []) << path
      rescue LoadError, SyntaxError
        puts 'Warning: failed to load extensions'
      end

      # Stop tracking.

      Module.class_eval do
        def method_added(n) # rubocop:disable Lint/DuplicateMethods
        end

        def singleton_method_added(n) # rubocop:disable Lint/DuplicateMethods
        end
      end
    end
  end
end

require 'yaml'
require 'time'
require 'oj'

require 'vying/games/dup'
require 'vying/games/memoize'

require 'vying/games/subset'

require 'vying/games/parts/board'
require 'vying/games/parts/grid'
require 'vying/games/parts/dice'
require 'vying/games/parts/cards/card'

require 'vying/games/user'
require 'vying/games/random'
require 'vying/games/option'
require 'vying/games/position'
require 'vying/games/notation'
require 'vying/games/format'
require 'vying/games/rules/card/trick/trick'
require 'vying/games/rules'
require 'vying/games/player'
require 'vying/games/move'
require 'vying/games/special_move'
require 'vying/games/history'
require 'vying/games/game'
require 'vying/games/ai/search'
require 'vying/games/ai/book'
require 'vying/games/ai/bot'

# The version file is generated by 'rake version' for tagged versions of the
# library.  So, it may not be present.

begin
  require 'vying/games/version'
rescue LoadError
  nil
end

# Load all SpecialMoves, Rules, Notations, and Bots

Vying::Games::SpecialMove.require_all
Vying::Games::Rules.require_all
Vying::Games::Notation.require_all
Vying::Games::Format.require_all
Vying::Games::Bot.require_all
